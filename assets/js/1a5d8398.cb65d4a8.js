"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[111],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5928:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>x,contentTitle:()=>k,default:()=>O,frontMatter:()=>h,metadata:()=>w,toc:()=>T});var r=n(5773),a=n(808),l=n(7378),o=n(5318),i=n(8944),s=n(6457),u=n(784),c=n(9947),p=n(3457);const d="tabList_J5MA",m="tabItem_l0OV";function f(e){var t,n,a=e.lazy,o=e.block,s=e.defaultValue,f=e.values,b=e.groupId,v=e.className,y=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=f?f:y.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,u.l)(g,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===s?s:null!=(t=null!=s?s:null==(n=y.find((function(e){return e.props.default})))?void 0:n.props.value)?t:y[0].props.value;if(null!==k&&!g.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,c.U)(),x=w.tabGroupChoices,T=w.setTabGroupChoices,N=(0,l.useState)(k),O=N[0],E=N[1],j=[],I=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var P=x[b];null!=P&&P!==O&&g.some((function(e){return e.value===P}))&&E(P)}var S=function(e){var t=e.currentTarget,n=j.indexOf(t),r=g[n].value;r!==O&&(I(t),E(r),null!=b&&T(b,String(r)))},D=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r,a=j.indexOf(e.currentTarget)+1;n=null!=(r=j[a])?r:j[0];break;case"ArrowLeft":var l,o=j.indexOf(e.currentTarget)-1;n=null!=(l=j[o])?l:j[j.length-1]}null==(t=n)||t.focus()};return l.createElement("div",{className:(0,i.Z)("tabs-container",d)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":o},v)},g.map((function(e){var t=e.value,n=e.label,a=e.attributes;return l.createElement("li",(0,r.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:function(e){return j.push(e)},onKeyDown:D,onFocus:S,onClick:S},a,{className:(0,i.Z)("tabs__item",m,null==a?void 0:a.className,{"tabs__item--active":O===t})}),null!=n?n:t)}))),a?(0,l.cloneElement)(y.filter((function(e){return e.props.value===O}))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},y.map((function(e,t){return(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function b(e){var t=(0,s.Z)();return l.createElement(f,(0,r.Z)({key:String(t)},e))}const v="tabItem_wHwb";function y(e){var t=e.children,n=e.hidden,r=e.className;return l.createElement("div",{role:"tabpanel",className:(0,i.Z)(v,r),hidden:n},t)}var g=["components"],h={},k="Getting Started",w={unversionedId:"index",id:"index",title:"Getting Started",description:"fielded is a library for managing form state on the web or Node.js.",source:"@site/../docs/index.mdx",sourceDirName:".",slug:"/",permalink:"/fielded/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",next:{title:"Field",permalink:"/fielded/api/field"}},x={},T=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2}],N={toc:T};function O(e){var t=e.components,n=(0,a.Z)(e,g);return(0,o.kt)("wrapper",(0,r.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"fielded is a library for managing form state on the web or Node.js.\nIts main features are"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Strongly typed with TypeScript"),".",(0,o.kt)("br",null),"\nAll properties are statically referenced.\nThere are no fragile strings that you need to remember to update when doing refactors like in\nsimilar form state libraries."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Independent of UI"),".",(0,o.kt)("br",null),"\nfielded may be used with React, plain HTML, or even in a Node.js server! This makes your forms\ntestable, decoupled and portable."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Simple semantics"),".",(0,o.kt)("br",null),"\nSince fielded's constructs are plain JavaScript classes and functions, it's easy to test validation\nbehaviours, or even extend it to generate UI from the form state.")),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"fielded is ",(0,o.kt)("em",{parentName:"p"},"currently")," powered by ",(0,o.kt)("a",{parentName:"p",href:"https://mobx.js.org/"},"MobX"),", a reactivity-based state management library.",(0,o.kt)("br",null),"\nYou'll need to install it and observe fielded's state using its APIs (e.g. computeds, observers) to be notified of changes."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This dependency will soon be removed to support applications that don't use it.")),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"You can get fielded by using your favourite package manager:"),(0,o.kt)(b,{mdxType:"Tabs"},(0,o.kt)(y,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm install fielded\n"))),(0,o.kt)(y,{value:"yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn add fielded\n")))),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"As mentioned above, fielded makes use of pure JavaScript, powered by MobX observers.\nThe following example demonstrates how to update the form state and track its changes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { Form, FormArray, Field } from \"fielded\";\nimport { autorun } from \"mobx\";\n\nconst form = new Form({\n  name: Field.text(\"John Doe\"),\n  age: Field.number(),\n  pets: new FormArray([new Form({ name: Field.text(\"Rex\") })]),\n});\n\nautorun(() => {\n  console.log(form.snapshot());\n});\n// logs { name: 'John Doe', pets: [{ name: 'Rex' }] }\n\nform.fields.age.set(30);\n// logs { name: 'John Doe', age: 30, pets: [{ name: 'Rex' }] }\n")),(0,o.kt)("p",null,"Now, let's understand how to use fielded's APIs to build your form state."))}O.isMDXComponent=!0}}]);